<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <style>
    
      
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
      }
      #div1{
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-top: 20px;
        
      }

      h1 {
        text-align: center;
        font-weight: 600;
        font-family: serif;
      }
      h2 {
        text-align: center;
      }


      #todo-list {
        margin: 20px auto;
        width: 60vw;
        height: auto;
        background-color: #f8f8f8;
        border-radius: 5px;
        padding: 10px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.3);
      }

      .todo-item {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
        padding: 10px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      }

      .todo-item input[type="checkbox"] {
        margin-right: 10px;
      }

      .todo-item input[type="text"] {
        flex: 1;
        border: none;
        background-color: transparent;
        font-size: 16px;
      }

      .todo-item button {
        border: none;
        background-color: transparent;
        color: #ff0000;
        font-size: 16px;
        cursor: pointer;
      }

      .todo-item button:hover {
        text-decoration: underline;
      }
      /* input{
        width:90%;
        border: none;
        border-bottom: 1px solid #666;
        background: none;
        padding: 5px;

      } */

      .inputTask{
        margin-right: 10px;
      }
      #todo-form{
        display: flex;
        align-items: center;
      }

      .bottoDiv{
        display: flex;
        align-items: center;
        flex-direction: column;
        width: auto;
      }
      
    </style>
</head>
<body>

 
<body>
    <br>
    <h1>Your List</h1>
    <div id="div1">
      <form id="todo-form">
          <input class="inputTask form-control" type="text" id="task-input" autocomplete="off" placeholder="Write a task">
          <button class="btn btn-light" type="submit">Add Task</button>
      </form>
      <div id="todo-list"></div>
<br>
      <a href="/login">Log Out</a>

    </div>

<div class="bottonDiv">

</div>
</body>
</html>

    




    <script>
        const todoList = document.querySelector('#todo-list');
const input = document.querySelector('#task-input');


function loadTasks() {
  const tasks = JSON.parse(localStorage.getItem('tasks')) || [];

  tasks.forEach((taskText) => {
    createTaskElement(taskText);
  });
}





function createTaskElement(taskText) {
  const newItem = document.createElement('div');
  newItem.classList.add('todo-item');
  newItem.innerHTML = `
    <input type="checkbox" onclick="textStrike(this)">
    <input type="text" value="${taskText}">
    <button>Delete</button>
  `;

  const deleteButton = newItem.querySelector('button');
  deleteButton.addEventListener('click', function () {
    newItem.remove();
    saveTasksToLocalStorage(); 
  });

  todoList.appendChild(newItem);
}




function saveTasksToLocalStorage() {
  const taskElements = document.querySelectorAll('.todo-item input[type="text"]');
  const tasks = Array.from(taskElements).map((input) => input.value);
  localStorage.setItem('tasks', JSON.stringify(tasks));
}


function textStrike(checkbox) {
  const textInput = checkbox.nextElementSibling;
  if (checkbox.checked) {
    textInput.style.textDecoration = 'line-through';
    textInput.style.color = 'grey';
    textInput.readOnly = true;
  } else {
    textInput.style.textDecoration = 'none';
    textInput.style.color = 'black';
    textInput.readOnly = false;
  }
  saveTasksToLocalStorage(); 
}


document.addEventListener('DOMContentLoaded', () => {
  loadTasks(); 

  const form = document.querySelector('form');
  form.addEventListener('submit', function (event) {
    event.preventDefault();
    if (input.value) {
      createTaskElement(input.value);
      saveTasksToLocalStorage(); 
      input.value = '';
    }
  });
});

/////////////


    </script>
</body>
</html>